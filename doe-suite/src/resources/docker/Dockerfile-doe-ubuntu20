FROM arc:latest

# 使用 root 用户执行需要权限的操作
USER root

# 设置全局代理环境变量（适用于非交互式会话）
RUN echo 'http_proxy=http://172.20.0.1:7890' >> /etc/environment && \
    echo 'https_proxy=http://172.20.0.1:7890' >> /etc/environment && \
    echo 'all_proxy=http://172.20.0.1:7890' >> /etc/environment && \
    echo 'no_proxy=localhost,127.0.0.1' >> /etc/environment

# 确保 ubuntu 用户存在并有 sudo 权限
RUN if ! id -u ubuntu > /dev/null 2>&1; then \
        useradd -m -s /bin/bash ubuntu; \
        echo "ubuntu:test" | chpasswd; \
        usermod -aG sudo ubuntu; \
    fi && \
    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

# 切换到 ubuntu 用户
USER ubuntu
WORKDIR /home/ubuntu

# 配置 Git 代理（无需 sudo，写入用户目录 ~/.gitconfig）
RUN git config --global http.proxy http://172.20.0.1:7890 && \
    git config --global https.proxy http://172.20.0.1:7890

## 安装 Rust
#RUN curl https://sh.rustup.rs -sSf | bash -s -- -y && \
#    . $HOME/.cargo/env && \
#    rustup install 1.76.0 && \
#    rustup default nightly-2024-02-04
#
## 为交互式会话配置 Rust 环境
#RUN echo 'source $HOME/.cargo/env' >> $HOME/.bashrc
#
## 构建 mpc-consistency（假设目录存在）
#RUN . $HOME/.cargo/env && \
#    cd /home/ubuntu/mpc-consistency && \
#    cargo build --release --features parallel
#
## 构建 MP-SPDZ（假设目录存在）
#RUN cd /home/ubuntu/code/MP-SPDZ && \
#    make -j8 libff && \
#    make -j8 replicated-ring-party.x rep-ring-switch-party.x semi2k-party.x